//Mixins
@use "../Utils/maps" as *;

/*
    Media queries mixins 

    Will in the future change the syntax in the range with a less obsolete version
    ex: @media screen and ( map-get($breakpoints, mobile) <= width <=  map-get($breakpoints, tablet) ){...}

*/

@mixin mobile-only {
    @media screen and (max-width: map-get($breakpoints, mobile)) {
        @content;
    }
}

@mixin tablet-only {
    @media screen and (min-width: map-get($breakpoints, mobile)) and (max-width: map-get($breakpoints, tablet)) {
        @content;
    }
}

@mixin laptop-only {
    @media screen and (min-width: map-get($breakpoints, laptop)) and (max-width: map-get($breakpoints, desktop)) {
        @content;
    }
}

@mixin desktop-only {
    @media screen and (min-width: map-get($breakpoints, desktop)) {
        @content;
    }
}


//Flex mixins
@mixin center-flex($gap: 0px) {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: $gap;
}

@mixin center-flex-column($gap: 0px) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: $gap;
}


//Grid mixins
@mixin grid($rows: auto-fill, $columns: auto-fill, $gap: 0px) {
    display: grid;
    grid-template-rows: repeat($rows, 1fr);
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

//Center in the middle query
@mixin absolute-center {
    position: absolute;
    left: 50%;
    top: 50%;
    translate: -50% -50%;
}

//Mixin to make the image avoid deforming itself when applying CSS propeties
@mixin fit-image {
    -o-object-fit: cover;
    object-fit: cover;
    -o-object-position: center;
    object-position: center;
}